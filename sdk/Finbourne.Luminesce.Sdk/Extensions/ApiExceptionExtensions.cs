/*
 * FINBOURNE Luminesce Web API
 *
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System.Net;
using Finbourne.Luminesce.Sdk.Client;
using Finbourne.Luminesce.Sdk.Model;
using Newtonsoft.Json;

namespace Finbourne.Luminesce.Sdk.Extensions
{
    /// <summary>
    /// Extension to deserialise exceptions contained within the ApiException.ErrorContent
    ///</summary>
    public static class ApiExceptionExtensions
    {
        /// <summary>
        /// Return the details of a problem
        /// In case the ErrorContent object that gets returned is not a valid deserializable LusidProblemDetails JSON, a null be returned
        /// </summary>
        /// <param name="ex">The API exception</param>
        /// <returns>Further details of the problem</returns>
        public static LusidProblemDetails ProblemDetails(this ApiException ex)
        {
            if (ex.ErrorContent == null)
            {
                return null;
            }

            try
            {
                // ApiException.ErrorContent contains a JSON serialized ProblemDetails
                return JsonConvert.DeserializeObject<LusidProblemDetails>(
                    ex.ErrorContent.ToString(), new PropertyBasedConverter()
                );
            }
            catch (JsonException)
            {
                // Return a null in case the ErrorContent is an invalid JSON or a HTML string
                return null;
            }
        }

        /// <summary>
        /// Extracts the requestId from an ApiException
        /// </summary>
        /// <param name="ex">The API exception</param>
        /// <returns>The requestId that is associated with the exception</returns>
        public static string GetRequestId(this ApiException ex)
        {
            // Extract requestId from Insights link contained in the Instance property
            var instanceParts = ex?.ProblemDetails()?.Instance?.Split("/".ToCharArray());

            if (instanceParts == null || instanceParts.Length < 7) return null;

            return instanceParts[6];
        }
    }
}